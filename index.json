{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2024-11-28T16:02:56.914Z",
    "end": "2024-11-28T16:03:03.583Z",
    "duration": 6669,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "92a778c2-4740-4f17-92a7-3413c292d6c7",
      "title": "",
      "fullFile": "C:\\Users\\ASUS\\OneDrive\\Desktop\\Jimy\\test.js",
      "file": "\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "27e339d7-6556-4067-9966-11ca926cc12e",
          "title": "test",
          "fullFile": "C:\\Users\\ASUS\\OneDrive\\Desktop\\Jimy\\test.js",
          "file": "\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"test\"",
              "fullTitle": "test \"before all\" hook in \"test\"",
              "timedOut": false,
              "duration": 4071,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(Browser.CHROME).build()\nawait driver.manage().window().maximize();\nawait driver.get('https://intern1.cbn.net.id/login')",
              "err": {},
              "uuid": "21b9d472-3e16-45da-8860-88d0a557fa58",
              "parentUUID": "27e339d7-6556-4067-9966-11ca926cc12e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"test\"",
              "fullTitle": "test \"after all\" hook in \"test\"",
              "timedOut": false,
              "duration": 122,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "ab38126a-6bb1-46b3-9aa3-ba02dc36d199",
              "parentUUID": "27e339d7-6556-4067-9966-11ca926cc12e",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"test\"",
              "fullTitle": "test \"after each\" hook in \"test\"",
              "timedOut": false,
              "duration": 203,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const imageFileName = `${this.currentTest.title.replace(/ /g, '_')}.png`;\nconst directory = this.currentTest.state === 'failed' \n      ? './myReport/evidenceFail/' \n      : './myReport/evidencePass/';\n      const image = await driver.takeScreenshot();\n      if (!fs.existsSync(directory)) {\n        fs.mkdirSync(directory, { recursive: true });\n    }\n    fs.writeFileSync(`${directory}${imageFileName}`, image, 'base64');\n    addContext(this, `Following is the ${this.currentTest.state} test screenshot`);\n      addContext(this, `${directory}${imageFileName}`);",
              "err": {},
              "uuid": "e26ce359-ee93-44e3-b8c1-bd057699f51e",
              "parentUUID": "27e339d7-6556-4067-9966-11ca926cc12e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "coba-coba hasil fail",
              "fullTitle": "test coba-coba hasil fail",
              "timedOut": false,
              "duration": 1996,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"Following is the failed test screenshot\",\n  \"./myReport/evidenceFail/coba-coba_hasil_fail.png\"\n]",
              "code": "await driver.findElement(By.xpath('/html/body/section/div/div/div/form/div[1]/input')).sendKeys('david');\nawait driver.findElement(By.xpath('/html/body/section/div/div/div/form/div[2]/input')).sendKeys('password', Key.RETURN);\nconst namaHalaman = await driver.findElement(By.xpath('/html/body/div/header/div/h1')).getText();\nchai.expect(namaHalaman).to.equal('Contract miew');",
              "err": {
                "message": "AssertionError: expected 'Contract View' to equal 'Contract miew'",
                "estack": "AssertionError: expected 'Contract View' to equal 'Contract miew'\n    at Context.<anonymous> (test.js:66:33)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Contract View\n+ Contract miew\n"
              },
              "uuid": "459beb5b-c907-46ab-892e-784ee8e1614a",
              "parentUUID": "27e339d7-6556-4067-9966-11ca926cc12e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coba-coba hasil pass",
              "fullTitle": "test coba-coba hasil pass",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  \"Following is the passed test screenshot\",\n  \"./myReport/evidencePass/coba-coba_hasil_pass.png\"\n]",
              "code": "const namaHalaman = await driver.findElement(By.xpath('/html/body/div/header/div/h1')).getText();\nchai.expect(namaHalaman).to.equal('Contract View');",
              "err": {},
              "uuid": "e4167b2d-c475-4496-b16f-e2e0940575b2",
              "parentUUID": "27e339d7-6556-4067-9966-11ca926cc12e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4167b2d-c475-4496-b16f-e2e0940575b2"
          ],
          "failures": [
            "459beb5b-c907-46ab-892e-784ee8e1614a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2023,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./myReport",
        "reportFilename": "index"
      },
      "version": "6.2.0"
    }
  }
}